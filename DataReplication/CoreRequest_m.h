//
// Generated file, do not edit! Created by opp_msgtool 6.1 from CoreRequest.msg.
//

#ifndef __COREREQUEST_M_H
#define __COREREQUEST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class CoreRequest;
/**
 * Class generated from <tt>CoreRequest.msg:16</tt> by opp_msgtool.
 * <pre>
 * message CoreRequest
 * {
 *     int edgeId; // ID of the edge the original request was made to
 *     string userId; // ID of the user that made the request
 *     string dataId; // ID of the requested data
 * }
 * </pre>
 */
class CoreRequest : public ::omnetpp::cMessage
{
  protected:
    int edgeId = 0;
    omnetpp::opp_string userId;
    omnetpp::opp_string dataId;

  private:
    void copy(const CoreRequest& other);

  protected:
    bool operator==(const CoreRequest&) = delete;

  public:
    CoreRequest(const char *name=nullptr, short kind=0);
    CoreRequest(const CoreRequest& other);
    virtual ~CoreRequest();
    CoreRequest& operator=(const CoreRequest& other);
    virtual CoreRequest *dup() const override {return new CoreRequest(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getEdgeId() const;
    virtual void setEdgeId(int edgeId);

    virtual const char * getUserId() const;
    virtual void setUserId(const char * userId);

    virtual const char * getDataId() const;
    virtual void setDataId(const char * dataId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CoreRequest& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CoreRequest& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline CoreRequest *fromAnyPtr(any_ptr ptr) { return check_and_cast<CoreRequest*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __COREREQUEST_M_H

